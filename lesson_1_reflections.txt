q: How did viewing a diff between two versions of 
a file help you see the bug that was introduced?

A: It pinpointed the changes between the two version
for me, thus narrowing way down the number of lines
I would have to compare to find the bug, since we know 
bug would show up as a change. Much faster than scanning
the whole file. 

Q: How could having easy access to the entire history of a 
file make you a more efficient programmer in the long term?

A: It would allow me to see past bugs. 

Q:What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google docs does?

A: Pros: - meaningful save points
		 =  you don't end up saving more than you need
		 - You can add a meaningful message whenever you save
   Cons: - Human error - you have to remember to save
         - Your saves could be too small/too big
         - Takes more time to save and add message.


Q: Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

A: Because files in Git more often would relate to each other, whereas Google Doc files do not? Not sure on this one.

Q: How can you use the commands git log and git diff to view the history of files?

A: Use git log to view the entire history of commits made. Compare different commits to see what actual changes were made in between - what code was added/deleted.

Q: How might using version control make you more confident to make changes that could break something?

A: Version control makes me much more confident to make changes that could poentially break something. I used to think I could only find bugs in html files by undoing a change at a time until I found it, which was also risky b/c of the potential to lose work. 

Q: Now that you have your workspace set up, what do you want to try using Git for?

A: Building websites and being able to test code.